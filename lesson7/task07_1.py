# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.

# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.

# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух
# объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно —
# первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, rows):
        """по хорошему тут нужна была бы проверка на то, что размерность в каждой строке совпадает
        ну и нужно сохранить размерности матрицы в приватные атрибуты,
         чтобы потом при сложении сразу выдавать ошибки если размерности слагаемых не совпадают"""
        self._matrix = rows

    def __str__(self):
        result = ""
        for row in self._matrix:
            for item in row:
                result += str(item) + " "
            result += '\n'
        return result

    def __add__(self, other):
        new_matrix = []
        for row_1, row_2 in zip(self._matrix, other._matrix):
            new_matrix.append([item_1+item_2 for item_1, item_2 in zip(row_1, row_2)])
        return Matrix(new_matrix)

matrix_1 = Matrix([[1, 1, 1], [2, 2, 2], [3, 3, 3]])
print(matrix_1)
matrix_2 = Matrix([[3, 3, 3], [2, 2, 2], [1, 1, 1]])
print(matrix_2)

print(matrix_1+matrix_2)
